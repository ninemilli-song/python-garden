def bubble_sort(arr):
    """
    冒泡排序步骤遍历列表并比较相邻的元素对。如果元素顺序错误，则交换它们。
    重复遍历列表未排序部分的元素，直到完成列表排序。
    因为冒泡排序重复地通过列表的未排序部分，所以它具有最坏的情况复杂度O(n^2)。
    :param arr:
    :return:
    """
    print("******************************************************************************")
    print("****** 冒泡排序步骤遍历列表并比较相邻的元素对。如果元素顺序错误，则交换它们。")
    print("****** 重复遍历列表未排序部分的元素，直到完成列表排序。")
    print("****** 因为冒泡排序重复地通过列表的未排序部分，所以它具有最坏的情况复杂度O(n^2)。")
    print("******************************************************************************")
    def swap(i, j):
        arr[i], arr[j] = arr[j], arr[i]

    n = len(arr)
    swapped = True

    x = -1
    while swapped:
        swapped = False
        x = x + 1
        for i in range(1, n-x):
            if arr[i - 1] > arr[i]:
                swap(i - 1, i)
                swapped = True

    return arr
